version: '3.8'

services:
    db:
      image: "postgres:12"
      ports:
        - 5432:5432
      restart: always
      environment:
        POSTGRES_USER: ${SQL_USER} 
        POSTGRES_PASSWORD: ${SQL_PASS}
        POSTGRES_DB: ${PAIPASS_DB_NAME}
      networks:
        - paipassnet
    torrent_tracker_db:
      image: "postgres:12"
      restart: always
      environment:
        POSTGRES_USER: ${SQL_USER} 
        POSTGRES_PASSWORD: ${SQL_PASS}
        POSTGRES_DB: ${TRACKER_DB_NAME}
      networks:
        - paipassnet
    torrent_client_db:
      image: "postgres:12"
      restart: always
      environment:
        POSTGRES_USER: ${SQL_USER} 
        POSTGRES_PASSWORD: ${SQL_PASS}
        POSTGRES_DB: ${TORRENT_CLIENT_DB_NAME}
      networks:
        - paipassnet

    frontend:
      build: 
        context: ./frontend
        args:
          - FRONTEND_BUILD_VERSION=demo
          - DEPLOYMENT_ENVIRONMENT=${DEPLOYMENT_ENVIRONMENT}
      stdin_open: true

      ports:
        - 80:80
        - 1024:1024
      networks:
        - paipassnet

    admin:
      build: 
        context: ./admin
        args:
          - FRONTEND_BUILD_VERSION=demo
          - DEPLOYMENT_ENVIRONMENT=${DEPLOYMENT_ENVIRONMENT} 
      ports:
        - 8080:8080
      networks:
        - paipassnet

    backend:
      build: 
        context: ./ 
        dockerfile: ./backend/Dockerfile     
      entrypoint: ./entrypoint.sh

      command: python manage.py runserver 0.0.0.0:8000

      ports:
        - 8000:8000
      depends_on:
        - db
      environment:

        PAIPASS_DJANGO_SECRET: ${PAIPASS_DJANGO_SECRET}
        DATA_DIR: ${BACKEND_DATA_DIR}

        SQL_HOST: ${SQL_HOST}
        SQL_PORT: ${SQL_PORT}
        SQL_USER: ${SQL_USER}
        SQL_PASS: ${SQL_PASS}

        DEPLOYMENT_ENVIRONMENT: ${DEPLOYMENT_ENVIRONMENT} 

        CRYPTO_HOST: ${CRYPTO_HOST}
        CRYPTO_PORT: ${CRYPTO_PORT}
        CRYPTO_USER: ${CRYPTO_USER}
        CRYPTO_PASS: ${CRYPTO_PASS}

        TORRENT_HOST: ${TORRENT_HOST}
        TORRENT_PORT: ${TORRENT_PORT}

        BLOCKCHAIN_TYPE: ${BLOCKCHAIN_TYPE}
        BLOCKCHAIN_NET: ${BLOCKCHAIN_NET}
        PAIPASS_DB_NAME: ${PAIPASS_DB_NAME}

        PAICOIN_SERVER_EMAIL: ${PAICOIN_SERVER_EMAIL}
        PAICOIN_SERVER_PASS: ${PAICOIN_SERVER_PASS}

        PAIFORUM_APP_UUID: ${PAIFORUM_APP_UUID}
        PAIFORUM_APP_CLIENT_ID: ${PAIFORUM_APP_CLIENT_ID}
        PAIFORUM_APP_CLIENT_SECRET: ${PAIFORUM_APP_CLIENT_SECRET}

        PAIPASS_DEV_EMAIL: ${PAIPASS_DEV_EMAIL}
        PAIPASS_DEV_PASS: ${PAIPASS_DEV_PASS}
        PAIPASS_DEV_APP_UUID: ${PAIPASS_DEV_APP_UUID}
        PAIPASS_DEV_PDP2_TXID: ${PAIPASS_DEV_PDP2_TXID}
        PAIPASS_DEV_PDP2_REF: ${PAIPASS_DEV_PDP2_REF}
        PAIPASS_DEV_PDP2_UUID: ${PAIPASS_DEV_PDP2_UUID}
        PAIPASS_DEV_PHONE: ${PAIPASS_DEV_PHONE}

        TEST_OAUTH2_END_USER_EMAIL: ${TEST_OAUTH2_END_USER_EMAIL}
        TEST_OAUTH2_USER_EMAIL: ${TEST_OAUTH2_USER_EMAIL}
        TEST_OAUTH_PASS: ${TEST_OAUTH_PASS}
        TEST_OAUTH2_CLIENT_ID: ${TEST_OAUTH2_CLIENT_ID}
        TEST_OAUTH2_CLIENT_SECRET: ${TEST_OAUTH2_CLIENT_SECRET}
        
        TEST_PDP2_USER_EMAIL: ${TEST_PDP2_USER_EMAIL}
        TEST_PDP2_USER_PASS: ${TEST_PDP2_USER_PASS}
      

        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        AWS_STORAGE_BUCKET_NAME: ${AWS_STORAGE_BUCKET_NAME}

        NEW_INFO_HASH_DELIM: ${NEW_INFO_HASH_DELIM}
        SSO_SECRET_DISCOURSE: ${SSO_SECRET_DISCOURSE}
      networks:
        - paipassnet

    paicoin:
      build: 
        context: ./paicoin
        dockerfile: ./Dockerfile
      entrypoint: /bin/bash /home/j1149/paicoin/entrypoint.sh
      command: /opt/conda/bin/python /home/j1149/paicoin/app.py
      init: true
      security_opt:
        - seccomp:unconfined
      volumes:
        - ./data/paicoin:/home/j1149/.paicoin
      environment:
        CRYPTO_HOST: ${CRYPTO_HOST}
        CRYPTO_PORT: ${CRYPTO_PORT}
        CRYPTO_USER: ${CRYPTO_USER}
        CRYPTO_PASS: ${CRYPTO_PASS}
        DB_HOST: ${NOSQL_HOST}
        DB_PORT: ${NOSQL_PORT}
        MINER_HOST: miner
        MINER_PORT: 5000
        BALANCE_THRESHOLD: 0.01
        BALANCE_OPTIMUM: 1.0
        PAICOIN_SERVER_EMAIL: ${PAICOIN_SERVER_EMAIL}
        PAICOIN_SERVER_PASS: ${PAICOIN_SERVER_PASS}
        BACKEND_HOST: ${BACKEND_HOST}
        BACKEND_PORT: ${BACKEND_PORT}
        WALLET_PATH: ${PAICOIN_WALLET_PATH}
        S3_WALLET_PATH: ${PAICOIN_S3_WALLET_PATH}
        S3_BUCKET_NAME: ${PAICOIN_S3_BUCKET_NAME}
        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
        DEPLOYMENT_ENVIRONMENT: ${DEPLOYMENT_ENVIRONMENT} 
      depends_on:
        - backend
      networks:
        paipassnet:
          aliases:
             - paicoin

    torrent_client:
      build:
        context: ./torrent/torrent_client/
        dockerfile: ./Dockerfile
      entrypoint: /bin/bash /opt/api/entrypoint.sh
      command: /usr/bin/python3 /opt/api/manage.py runserver 0.0.0.0:8000
      ports:
        - 9091:9091
        - 51413:51413
      environment:
        SQL_HOST: ${TORRENT_CLIENT_SQL_HOST}
        SQL_PORT: ${TORRENT_CLIENT_SQL_PORT}
        SQL_USER: ${SQL_USER}
        SQL_PASS: ${SQL_PASS}
        DB_NAME: ${TORRENT_CLIENT_DB_NAME}
        TORRENT_TRACKER_HOST: ${INTERNAL_TORRENT_TRACKER_HOST}
        TORRENT_TRACKER_PORT: ${TORRENT_TRACKER_PORT}
        OPENTRACKER_PORT: ${OPENTRACKER_PORT}
        NEW_INFO_HASH_DELIM: ${NEW_INFO_HASH_DELIM}
        BLOCKCHAIN_TYPE: ${BLOCKCHAIN_TYPE}
      depends_on:
        - torrent_client_db
      networks:
        paipassnet:
          aliases:
            - torrentclient
      
    torrent_tracker:
      build:
        context: ./torrent/torrent_tracker/
        dockerfile: ./Dockerfile
      entrypoint: /bin/bash /opt/api/entrypoint.sh
      command: /usr/bin/python3.7 -Wa /opt/api/manage.py runserver 0.0.0.0:8000
      ports:
        - 6969:6969/udp
        - 6969:6969
      environment:
        SQL_HOST: ${TRACKER_SQL_HOST}
        SQL_PORT: ${TRACKER_SQL_PORT}
        SQL_USER: ${SQL_USER}
        SQL_PASS: ${SQL_PASS}
        NEW_INFO_HASH_DELIM: ${NEW_INFO_HASH_DELIM}
      networks:
        paipassnet:
          aliases:
            - torrenttracker
      depends_on:
        - torrent_tracker_db



    sandbox:
      build:
        context: ./
        dockerfile: ./sandbox/Dockerfile
      entrypoint: /bin/bash /opt/api/entrypoint.sh
      command: tail -f /var/log/transmission.log
      ports:
        - 9191:9091
        - 9123:9123
      environment:
        SSO_SECRET_DISCOURSE: ${SSO_SECRET_DISCOURSE}
        CRYPTO_HOST: ${CRYPTO_HOST}
        CRYPTO_PORT: ${CRYPTO_PORT}
        CRYPTO_USER: ${CRYPTO_USER}
        CRYPTO_PASS: ${CRYPTO_PASS}
        BLOCKCHAIN_TYPE: ${BLOCKCHAIN_TYPE}
        BLOCKCHAIN_NET: ${BLOCKCHAIN_NET}
        SQL_HOST: ${TORRENT_CLIENT_SQL_HOST}
        SQL_PORT: ${TORRENT_CLIENT_SQL_PORT}
        SQL_USER: ${SQL_USER}
        SQL_PASS: ${SQL_PASS}
        DB_NAME: ${TORRENT_CLIENT_DB_NAME}
        TORRENT_TRACKER_HOST: ${INTERNAL_TORRENT_TRACKER_HOST}
        TORRENT_TRACKER_PORT: ${TORRENT_TRACKER_PORT}
        OPENTRACKER_PORT: ${OPENTRACKER_PORT}
        NEW_INFO_HASH_DELIM: ${NEW_INFO_HASH_DELIM}
        IN_DOCKER: "True"
        TORRENT_HOST: ${TORRENT_HOST}
        TORRENT_PORT: ${TORRENT_PORT}
        
        PAIPASS_DEV_EMAIL: ${PAIPASS_DEV_EMAIL}
        PAIPASS_DEV_PASS: ${PAIPASS_DEV_PASS}
        PAIPASS_DEV_APP_UUID: ${PAIPASS_DEV_APP_UUID}
        PAIPASS_DEV_PDP2_TXID: ${PAIPASS_DEV_PDP2_TXID}
        PAIPASS_DEV_PDP2_REF: ${PAIPASS_DEV_PDP2_REF}
        PAIPASS_DEV_PDP2_UUID: ${PAIPASS_DEV_PDP2_UUID}

        PAIFORUM_APP_CLIENT_ID: ${PAIFORUM_APP_CLIENT_ID}
        PAIFORUM_APP_CLIENT_SECRET: ${PAIFORUM_APP_CLIENT_SECRET}


        BACKEND_HOST: ${BACKEND_HOST}
        BACKEND_PORT: ${BACKEND_PORT}
      networks:
        paipassnet:
          aliases:
            - sandbox
      
networks:
  paipassnet:

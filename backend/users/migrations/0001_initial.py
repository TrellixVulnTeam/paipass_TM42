# Generated by Django 3.0.1 on 2020-05-21 10:15

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True


    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PaipassUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(max_length=256, verbose_name='full name')),
                ('preferred_name', models.CharField(blank=True, max_length=256, verbose_name='preferred name')),
                ('premium_level', models.CharField(choices=[('premium', 'Premium'), ('free', 'Free')], default='free', max_length=64, verbose_name='premium level')),
                ('user_verification_level', models.CharField(choices=[('VERIFIED', 'Verified'), ('UNVERIFIED', 'UNVERIFIED')], default='UNVERIFIED', max_length=64, verbose_name='User verification level')),
                ('has_verified_email', models.BooleanField(default=False, verbose_name='email is verified')),
                ('phone_number', models.CharField(blank=True, max_length=31, verbose_name='phone number')),
                ('has_verified_phone', models.BooleanField(default=False, verbose_name='email is verified')),
                ('has_verified_gov_id', models.BooleanField(default=False)),
                ('arbitrary_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email_verification_request', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.EmailVerificationSession')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('phone_verification_request', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='api.PhoneVerificationSession')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', users.models.PaipassUserManager()),
            ],
        ),
    ]
